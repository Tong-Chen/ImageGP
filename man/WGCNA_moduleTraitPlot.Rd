% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/WGCNA.R
\name{WGCNA_moduleTraitPlot}
\alias{WGCNA_moduleTraitPlot}
\title{Module-trait heatmap}
\usage{
WGCNA_moduleTraitPlot(
  MEs_col,
  traitData = NULL,
  corType = "bicor",
  saveplot = NULL,
  prefix = "ehbio",
  angle_x = 90,
  up_color = c("red", "white", "blue"),
  down_color = c("green", "white"),
  ...
)
}
\arguments{
\item{MEs_col}{Module epigenes generated in \code{\link{WGCNA_saveModuleAndMe}}.}

\item{traitData}{Sample attributes data frame.
Or the "traitData" generated in \code{\link{WGCNA_readindata}}.}

\item{corType}{character string specifying the correlation to be used. Allowed values are (unique
abbreviations of) \code{"pearson"} and \code{"bicor"}, corresponding to Pearson and bidweight
midcorrelation, respectively. Missing values are handled using the \code{pairwise.complete.obs} option. }

\item{saveplot}{Save plot to given file "a.pdf", "b.png".}

\item{prefix}{prefix for output files.}

\item{angle_x}{Rotation angle for x-axis labels}

\item{up_color}{Vector of colours to use for upper triangles (which representing pearson correlations values).}

\item{down_color}{Vector of colours to use for lower triangles (which representing significance p-values).}

\item{...}{Additional parameters given to plot output (\code{\link{pdf}}, \code{\link{png}},...) like "width", "height", .etc.}
}
\value{
A dataframe.
}
\description{
Module-trait heatmap
}
\examples{

df = generateAbundanceDF(nSample=30, nGrp=3, sd=5)
datExpr <- WGCNA_dataFilter(df)
datExpr <- WGCNA_sampleClusterDetectOutlier(datExpr)
power <- WGCNA_softpower(datExpr)
net <- WGCNA_coexprNetwork(datExpr, power)
WGCNA_saveModuleAndMe(net, datExpr)
cyt <- WGCNA_cytoscape(net, power, datExpr)
hubgene <- WGCNA_hubgene(cyt)

#2
exprMat <- "test.file"
wgcnaL <- WGCNA_readindata(exprMat)

traitData <- 'trait.file'
wgcnaL <- WGCNA_readindata(exprMat, traitData)
datExpr <- wgcnaL$datExpr
traitData <- wgcnaL$traitData
WGCNA_dataCheck(datExpr)
datExpr <- WGCNA_dataFilter(datExpr)
datExpr <- WGCNA_sampleClusterDetectOutlier(datExpr)
# datExpr <- WGCNA_sampleClusterDetectOutlier(datExpr, traitColors=wgcnaL$traitColors)
power <- WGCNA_softpower(datExpr)
net <- WGCNA_coexprNetwork(datExpr, power)
MEs_col <- WGCNA_saveModuleAndMe(net, datExpr)
WGCNA_MEs_traitCorrelationHeatmap(MEs_col, traitData=traitData)
cyt <- WGCNA_cytoscape(net, power, datExpr)
hubgene <- WGCNA_hubgene(cyt)
WGCNA_moduleTraitPlot(MEs_col, traitData=traitData)


}
